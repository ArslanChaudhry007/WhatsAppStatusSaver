name: Build APK, IPA and Distribute via Firebase

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Flutter APK & IPA
    runs-on: macos-latest

    steps:
      # 1. Checkout your repo code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Java (for Android build)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # 3. Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.4'
          channel: 'stable'

      # 4. Get dependencies
      - name: Install dependencies
        run: flutter pub get

      # 5. Build Android APK (split for ABIs)
      - name: Build Android APK
        run: flutter build apk --release --split-per-abi

      #      # 6. Build iOS IPA (no code signing)
      #      - name: Build iOS IPA
      #        run: |
      #          flutter build ios --no-codesign
      #          cd build/ios/iphoneos
      #          mkdir Payload
      #          cp -r Runner.app Payload/
      #          zip -r app.ipa Payload

      # 7. Upload artifacts to GitHub Release
      - name: Create GitHub Release and Upload Artifacts
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            build/app/outputs/apk/release/*.apk,
            build/ios/iphoneos/app.ipa
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}

      # 8. Install Firebase CLI
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # 9. Distribute APK to Firebase App Distribution
      - name: Distribute to Firebase App Distribution
        run: |
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-arm64-v8a-release.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --groups "testers" \
            --token ${{ secrets.FIREBASE_TOKEN }}
